{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/user.reducer.js","redux/reducers/vehicle.reducer.js","redux/reducers/vehicleDetails.reducer.js","redux/reducers/maintenance.reducer.js","redux/reducers/trips.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/login.saga.js","redux/sagas/maintenance.saga.js","redux/sagas/registration.saga.js","redux/sagas/user.saga.js","redux/sagas/vehicles.saga.js","redux/sagas/trips.saga.js","redux/sagas/_root.saga.js","components/LogOutButton/LogOutButton.js","redux/mapStoreToProps.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginForm/LoginForm.js","components/LoginPage/LoginPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/UserPage/UserPage.js","components/InfoPage/InfoPage.js","components/RegisterForm/RegisterForm.js","components/LandingPage/LandingPage.js","components/RegisterPage/RegisterPage.js","components/VehicleListItem/VehicleListItem.js","components/VehicleList/VehicleList.js","components/MyGaragePage/MyGaragePage.js","components/AddVehiclePage/AddVehiclePage.js","components/VehicleDetailsPage/VehicleDetailsPage.js","components/VehicleDetailsEditPage/VehicleDetailsEditPage.js","components/VehicleMaintenancePage/VehicleMaintenancePage.js","components/AddTripPage/AddTripPage.js","components/ChangeOilPage/ChangeOilPage.js","components/ChangeTiresPage/ChangeTiresPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","errorMessage","payload","userReducer","vehicleReducer","vehicleDetailsReducer","maintenanceReducer","tripReducer","rootReducer","errors","user","vehicles","vehicleDetails","maintenance","trips","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","getMaintenanceDetails","postOilChange","postTireChange","updateOldOil","updateOldTires","maintenanceSaga","get","maintenanceDetails","data","vehicle_id","registerUser","registrationSaga","fetchUser","userSaga","getVehicles","getVehicleDetails","postVehicles","putVehicleDetails","deleteVehicle","vehicleSaga","id","delete","getTrips","postTrips","updateTripMaintenance","tripSaga","rootSaga","all","connect","props","className","onClick","dispatch","mapStoreToProps","reduxState","store","loginLinkData","path","text","to","Footer","LoginForm","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","target","value","onSubmit","this","role","htmlFor","name","required","onChange","Component","LoginPage","history","push","ComponentToShow","ComponentToProtect","component","authRedirect","otherProps","exact","from","AboutPage","UserPage","InfoPage","RegisterForm","LandingPage","heading","onLogin","RegisterPage","VehicleListItem","vehicleCardClick","vehicleItem","Grid","item","md","Card","CardActionArea","CardMedia","classes","imgMedia","image","title","CardContent","Typography","gutterBottom","variant","color","display","oil_left","oil_allowed","style","tires_left","tires_allowed","withRouter","withStyles","theme","createStyles","height","backgroundSize","VehicleList","container","spacing","align","justify","alignItems","map","index","key","MyGaragePage","addVehicleClick","textAlign","Button","AddVehiclePage","newVehicle","user_id","oil_date","Date","oil_miles_drove","oil_miles_allowed","oil_vehicle_id","tires_date","tires_miles_drove","tires_miles_allowed","tires_vehicle_id","handleVehicleInputChange","input","handleOilDateChange","date","handleTiresDateChange","addToGarageClick","backToGarageClick","TextField","vehicleInput","label","utils","DateFnsUtils","disableToolbar","autoOk","format","KeyboardButtonProps","helperText","margin","verticalAlign","DateTime","require","VehicleDetailsPage","vehicleDetailsEditClick","vehicleDetailsViewClick","vehicleDetailsAddTripClick","match","params","oil","paper","xs","alt","src","oilItem","miles_left","miles_allowed","tires","tireItem","TableContainer","Paper","width","Table","aria-label","TableHead","TableRow","TableCell","TableBody","tripItem","humanTripDate","fromISO","toLocaleString","DATE_SHORT","scope","start_point","end_point","total","VehicleDetailsEditPage","editVehicle","handleChangeField","propertyKey","saveVehicleDetails","cancelVehicleDetails","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","VehicleMaintenancePage","changeOilClick","changeTiresClick","humanOilDate","miles_drove","tireDate","humanTireDate","AddTripPage","startDisabled","endDisabled","addTrip","roundtrip","handleTripInputChange","checked","handleTripDateChange","getStartingLocation","navigator","geolocation","getCurrentPosition","startSuccess","error","pos","cords","coords","latitude","longitude","getEndingLocation","endingSuccess","err","cancelTrip","submitTrip","origin1","window","google","maps","LatLng","destination1","DistanceMatrixService","getDistanceMatrix","origins","destinations","unitSystem","UnitSystem","IMPERIAL","travelMode","alert","originList","originAddresses","destinationList","destinationAddresses","distance_text","rows","elements","distance","miles","parseInt","substring","length","tripInput","disabled","FormControlLabel","control","Checkbox","ChangeOilPage","oilChange","active","oldOil","cancelOilClick","oilInput","ChangeTiresPage","tireChange","oldTires","handleTireDateChange","changeTireClick","cancelTireClick","tireInput","customTheme","createMuiTheme","palette","primary","main","secondary","overrides","MuiFormLabel","root","MuiFormHelperText","MuiFormControlLabel","MuiPaper","backgroundColor","App","ThemeProvider","render","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6b3a5f8.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return \"Oops! The username and password didn't match. Try again!\";\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return \"Oops! That didn't work. The username might already be taken. Try again!\";\n    default:\n      return state;\n  }\n};\n\nconst errorMessage = (state = null, action) => {\n  if (action.type === 'ERROR_MSG') {\n    return action.payload;\n  } else if (action.type === 'ERROR_RESET') {\n    return null;\n  }\n\n  return state;\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n  errorMessage,\n});\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const vehicleReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VEHICLES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default vehicleReducer;\n","const vehicleDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_VEHICLE_DETAILS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default vehicleDetailsReducer;\n","const maintenanceReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_MAINTENANCE_DETAILS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default maintenanceReducer;\n","const tripReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_TRIPS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default tripReducer;\n","import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport vehicles from './vehicle.reducer';\nimport vehicleDetails from './vehicleDetails.reducer';\nimport maintenance from './maintenance.reducer';\nimport trips from './trips.reducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  user, // will have an id and username if someone is logged in\n  vehicles,\n  vehicleDetails,\n  maintenance,\n  trips,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: 'FETCH_USER' });\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getMaintenanceDetails(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    const maintenanceDetails = yield axios.get(\n      `/api/maintenance/${action.payload}`\n    );\n    yield put({\n      type: 'SET_MAINTENANCE_DETAILS',\n      payload: maintenanceDetails.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload:\n        'There was a problem loading maintenance history. Please try again.',\n    });\n  }\n}\n\nfunction* postOilChange(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    yield axios.post('/api/maintenance/oil', action.payload);\n    yield put({\n      type: 'GET_MAINTENANCE_DETAILS',\n      payload: action.payload.vehicle_id,\n    });\n    yield put({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: action.payload.vehicle_id,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't save your oil change. Please try again.\",\n    });\n  }\n}\n\nfunction* postTireChange(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    yield axios.post('/api/maintenance/tires', action.payload);\n    yield put({\n      type: 'GET_MAINTENANCE_DETAILS',\n      payload: action.payload.vehicle_id,\n    });\n    yield put({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: action.payload.vehicle_id,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't save your tire change. Please try again.\",\n    });\n  }\n}\n\nfunction* updateOldOil(action) {\n  try {\n    yield axios.put('/api/maintenance/oil', action.payload);\n    yield put({\n      type: 'GET_MAINTENANCE_DETAILS',\n      payload: action.payload.vehicle_id,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't update your old oil. Please try again.\",\n    });\n  }\n}\nfunction* updateOldTires(action) {\n  try {\n    yield axios.put('/api/maintenance/tires', action.payload);\n    yield put({\n      type: 'GET_MAINTENANCE_DETAILS',\n      payload: action.payload.vehicle_id,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't update your old tires. Please try again.\",\n    });\n  }\n}\n\nfunction* maintenanceSaga() {\n  yield takeLatest('GET_MAINTENANCE_DETAILS', getMaintenanceDetails);\n  yield takeLatest('POST_OIL', postOilChange);\n  yield takeLatest('POST_TIRES', postTireChange);\n  yield takeLatest('UPDATE_OIL', updateOldOil);\n  yield takeLatest('UPDATE_TIRES', updateOldTires);\n}\n\nexport default maintenanceSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n\n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n  } catch (error) {\n    console.log('Error with user registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getVehicles(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    const response = yield axios.get('/api/vehicles');\n    console.log(response.data);\n    yield put({\n      type: 'SET_VEHICLES',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem loading vehicles. Please try again.',\n    });\n  }\n}\n\nfunction* getVehicleDetails(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    const vehicleDetails = yield axios.get(\n      `/api/vehicles/details/${action.payload}`\n    );\n    yield put({\n      type: 'SET_VEHICLE_DETAILS',\n      payload: vehicleDetails.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem loading vehicles. Please try again.',\n    });\n  }\n}\n\nfunction* postVehicles(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    yield axios.post('/api/vehicles', action.payload);\n    yield put({\n      type: 'GET_VEHICLES',\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't save your vehicle. Please try again.\",\n    });\n  }\n}\n\nfunction* putVehicleDetails(action) {\n  try {\n    yield axios.put('/api/vehicles', action.payload);\n    console.log(action.payload.id);\n    yield put({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: action.payload.id,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't update your vehicle. Please try again.\",\n    });\n  }\n}\n\nfunction* deleteVehicle(action) {\n  try {\n    yield axios.delete(`/api/vehicles/${action.payload}`);\n    yield put({\n      type: 'GET_VEHICLES',\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't delete your vehicle. Please try again.\",\n    });\n  }\n}\n\nfunction* vehicleSaga() {\n  yield takeLatest('GET_VEHICLES', getVehicles);\n  yield takeLatest('GET_VEHICLE_DETAILS', getVehicleDetails);\n  yield takeLatest('POST_VEHICLES', postVehicles);\n  yield takeLatest('PUT_VEHICLE', putVehicleDetails);\n  yield takeLatest('DELETE_VEHICLE', deleteVehicle);\n}\n\nexport default vehicleSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getTrips(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    const response = yield axios.get(`/api/trips/${action.payload}`);\n    console.log(response.data);\n    yield put({\n      type: 'SET_TRIPS',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem loading trips. Please try again.',\n    });\n  }\n}\n\nfunction* postTrips(action) {\n  try {\n    yield put({ type: 'ERROR_RESET' });\n    yield axios.post('/api/trips', action.payload);\n    yield put({\n      type: 'UPDATE_TRIP_MAINTENANCE',\n      payload: action.payload,\n    });\n    yield put({\n      type: 'GET_TRIPS',\n      payload: action.payload.vehicle_id,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: \"Sorry we couldn't save your trip. Please try again.\",\n    });\n  }\n}\n\nfunction* updateTripMaintenance(action) {\n  try {\n    yield axios.put('/api/trips', action.payload);\n    console.log(action.payload.id);\n    yield put({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: action.payload.id,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload:\n        \"Sorry we couldn't update your vehicle maintenance. Please try again.\",\n    });\n  }\n}\n\nfunction* tripSaga() {\n  yield takeLatest('GET_TRIPS', getTrips);\n  yield takeLatest('POST_TRIPS', postTrips);\n  yield takeLatest('UPDATE_TRIP_MAINTENANCE', updateTripMaintenance);\n}\n\nexport default tripSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './login.saga';\nimport maintenanceSaga from './maintenance.saga';\nimport registrationSaga from './registration.saga';\nimport userSaga from './user.saga';\nimport vehicleSaga from './vehicles.saga';\nimport tripSaga from './trips.saga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(), // login saga is now registered\n    registrationSaga(),\n    userSaga(),\n    vehicleSaga(),\n    maintenanceSaga(),\n    tripSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = (props) => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","const mapStoreToProps = (reduxState) => {\n  return {\n    // reduxState properties bound to \"props.store\"\n    // ---------\n    store: reduxState,\n  };\n};\n\nexport default mapStoreToProps;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nconst Nav = (props) => {\n  let loginLinkData = {\n    path: '/login',\n    text: 'Login / Register',\n  };\n\n  if (props.store.user.id != null) {\n    loginLinkData.path = '/garage';\n    loginLinkData.text = 'My Garage';\n  }\n\n  return (\n    <div className=\"nav\">\n      <Link to=\"/garage\">\n        <h2 className=\"nav-title\">Moto Maintenance</h2>\n      </Link>\n      <div className=\"nav-right\">\n        <Link className=\"nav-link\" to={loginLinkData.path}>\n          {/* Show this link if they are logged in or not,\n          but call this link 'Home' if they are logged in,\n          and call this link 'Login / Register' if they are not */}\n          {loginLinkData.text}\n        </Link>\n        {/* Show the link to the info page and the logout button if the user is logged in */}\n        {props.store.user.id && (\n          <>\n            <LogOutButton className=\"nav-link\" />\n          </>\n        )}\n        {/* Always show this link since the about page is not protected */}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStoreToProps)(Nav);\n","import React from 'react';\nimport './Footer.css';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => <footer>&copy; Moto Maintenance</footer>;\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.login}>\n        <h2>Login</h2>\n        {this.props.store.errors.loginMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.loginMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              required\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </label>\n        </div>\n        <div>\n          <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Log In\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport LoginForm from '../LoginForm/LoginForm';\n\nclass LoginPage extends Component {\n  render() {\n    return (\n      <div>\n        <LoginForm />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/registration');\n            }}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginPage);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    // redirect path to be used if the user is authorized\n    authRedirect,\n    store,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (store.user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  }\n\n  // redirect a logged in user if an authRedirect prop has been provided\n  if (store.user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!store.user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n      component={ComponentToShow}\n    />\n  );\n};\n\nexport default connect(mapStoreToProps)(ProtectedRoute);\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div className=\"container\">\n    <div>\n      <p>This about page is for anyone to read!</p>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass UserPage extends Component {\n  // this component doesn't do much to start, just renders some user info to the DOM\n  render() {\n    return (\n      <div>\n        <h1 id=\"welcome\">Welcome, {this.props.store.user.username}!</h1>\n        <p>Your ID is: {this.props.store.user.id}</p>\n        <LogOutButton className=\"log-in\" />\n      </div>\n    );\n  }\n}\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStoreToProps)(UserPage);\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>Info Page</p>\n  </div>\n);\n\n// If you needed to add local state or other things,\n// you can make it a class component like:\n\n/*\nclass InfoPage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <p>Info Page</p>\n      </div>\n    )\n  }\n}\n*/\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass RegisterForm extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'REGISTER',\n      payload: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n    });\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.registerUser}>\n        <h2>Register User</h2>\n        {this.props.store.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.registrationMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              required\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              required\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </label>\n        </div>\n        <div>\n          <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Register\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport './LandingPage.css';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nclass LandingPage extends Component {\n  state = {\n    heading: 'Class Component',\n  };\n\n  onLogin = (event) => {\n    this.props.history.push('/login');\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>{this.state.heading}</h2>\n\n        <div className=\"grid\">\n          <div className=\"grid-col grid-col_8\">\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\n              id felis metus. Vestibulum et pulvinar tortor. Morbi pharetra\n              lacus ut ex molestie blandit. Etiam et turpis sit amet risus\n              mollis interdum. Suspendisse et justo vitae metus bibendum\n              fringilla sed sed justo. Aliquam sollicitudin dapibus lectus,\n              vitae consequat odio elementum eget. Praesent efficitur eros vitae\n              nunc interdum, eu interdum justo facilisis. Sed pulvinar nulla ac\n              dignissim efficitur. Quisque eget eros metus. Vestibulum bibendum\n              fringilla nibh a luctus. Duis a sapien metus.\n            </p>\n\n            <p>\n              Praesent consectetur orci dui, id elementum eros facilisis id. Sed\n              id dolor in augue porttitor faucibus eget sit amet ante. Nunc\n              consectetur placerat pharetra. Aenean gravida ex ut erat commodo,\n              ut finibus metus facilisis. Nullam eget lectus non urna rhoncus\n              accumsan quis id massa. Curabitur sit amet dolor nisl. Proin\n              euismod, augue at condimentum rhoncus, massa lorem semper lacus,\n              sed lobortis augue mi vel felis. Duis ultrices sapien at est\n              convallis congue.\n            </p>\n\n            <p>\n              Fusce porta diam ac tortor elementum, ut imperdiet metus volutpat.\n              Suspendisse posuere dapibus maximus. Aliquam vitae felis libero.\n              In vehicula sapien at semper ultrices. Vivamus sed feugiat libero.\n              Sed sagittis neque id diam euismod, ut egestas felis ultricies.\n              Nullam non fermentum mauris. Sed in enim ac turpis faucibus\n              pretium in sit amet nisi.\n            </p>\n          </div>\n          <div className=\"grid-col grid-col_4\">\n            <RegisterForm />\n\n            <center>\n              <h4>Already a Member?</h4>\n              <button className=\"btn btn_sizeSm\" onClick={this.onLogin}>\n                Login\n              </button>\n            </center>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LandingPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  render() {\n    return (\n      <div>\n        <RegisterForm />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/login');\n            }}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { Grid } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\n\nconst styling = (theme) =>\n  createStyles({\n    imgMedia: {\n      height: '330px',\n      backgroundSize: 'cover',\n    },\n  });\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\nclass VehicleListItem extends Component {\n  state = {\n    heading: 'Class Component',\n  };\n\n  vehicleCardClick = (event) => {\n    this.props.history.push(`/vehicle/details/${this.props.vehicleItem.id}`);\n  };\n\n  render() {\n    return (\n      <Grid item md={4}>\n        <Card onClick={this.vehicleCardClick}>\n          <CardActionArea>\n            <CardMedia\n              className={this.props.classes.imgMedia}\n              image={this.props.vehicleItem.image}\n              title={this.props.vehicleItem.name}\n            />\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                color=\"secondary\"\n              >\n                {this.props.vehicleItem.name}\n              </Typography>\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textPrimary\"\n                component=\"p\"\n                display=\"inline\"\n                // color=\"secondary\"\n              >\n                Oil: {}\n              </Typography>\n\n              {this.props.vehicleItem.oil_left >\n              this.props.vehicleItem.oil_allowed * 0.2 ? (\n                <Typography\n                  variant=\"body1\"\n                  style={{ color: 'green' }}\n                  component=\"p\"\n                  display=\"inline\"\n                >\n                  {this.props.vehicleItem.oil_left} mi {}\n                </Typography>\n              ) : (\n                <Typography\n                  variant=\"body1\"\n                  style={{ color: 'red' }}\n                  component=\"p\"\n                  display=\"inline\"\n                >\n                  {this.props.vehicleItem.oil_left} mi {}\n                </Typography>\n              )}\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textPrimary\"\n                display=\"inline\"\n                component=\"p\"\n                // color=\"secondary\"\n              >\n                Tires: {}\n              </Typography>\n              {this.props.vehicleItem.tires_left >\n              this.props.vehicleItem.tires_allowed * 0.2 ? (\n                <Typography\n                  variant=\"body1\"\n                  style={{ color: 'green' }}\n                  component=\"p\"\n                  display=\"inline\"\n                >\n                  {this.props.vehicleItem.tires_left} mi {}\n                </Typography>\n              ) : (\n                <Typography\n                  variant=\"body1\"\n                  style={{ color: 'red' }}\n                  component=\"p\"\n                  display=\"inline\"\n                >\n                  {this.props.vehicleItem.tires_left} mi {}\n                </Typography>\n              )}\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(\n  withStyles(styling)(connect(mapStoreToProps)(VehicleListItem))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport VehicleListItem from '../VehicleListItem/VehicleListItem';\nimport { Grid } from '@material-ui/core';\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\nclass VehicleList extends Component {\n  state = {\n    heading: 'Class Component',\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VEHICLES',\n    });\n  }\n\n  render() {\n    return (\n      <Grid\n        container\n        spacing={2}\n        align=\"center\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        {this.props.store.vehicles.map((vehicleItem, index) => {\n          return <VehicleListItem key={index} vehicleItem={vehicleItem} />;\n        })}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(VehicleList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport VehicleList from '../VehicleList/VehicleList';\nimport './MyGaragePage.css';\nimport Button from '@material-ui/core/Button';\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\nclass MyGaragePage extends Component {\n  state = {\n    heading: 'My Garage',\n  };\n\n  addVehicleClick = (event) => {\n    this.props.history.push('/addvehicle');\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 style={{ textAlign: 'center', color: '#22B1C2' }}>\n          {this.state.heading}\n        </h1>\n        <div className=\"addbtn\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.addVehicleClick}\n          >\n            Add a Vehicle\n          </Button>\n        </div>\n        <div>\n          <VehicleList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(MyGaragePage);\n","import 'date-fns';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\n\nconst styling = (theme) =>\n  createStyles({\n    vehicleInput: {\n      // width: '700px',\n      margin: '10px',\n      verticalAlign: 'baseline',\n    },\n  });\n\nclass AddVehiclePage extends Component {\n  state = {\n    heading: 'Add Vehicle',\n    newVehicle: {\n      name: '',\n      image: '',\n      user_id: this.props.store.user.id,\n      oil_date: new Date(),\n      oil_miles_drove: '',\n      oil_miles_allowed: '',\n      oil_vehicle_id: '',\n      tires_date: new Date(),\n      tires_miles_drove: '',\n      tires_miles_allowed: '',\n      tires_vehicle_id: '',\n    },\n  };\n\n  handleVehicleInputChange = (input) => (event) => {\n    this.setState({\n      newVehicle: {\n        ...this.state.newVehicle,\n        [input]: event.target.value,\n      },\n    });\n  };\n\n  handleOilDateChange = (event, date) => {\n    this.setState({\n      newVehicle: {\n        ...this.state.newVehicle,\n        oil_date: date,\n      },\n    });\n  };\n\n  handleTiresDateChange = (event, date) => {\n    this.setState({\n      newVehicle: {\n        ...this.state.newVehicle,\n        tires_date: date,\n      },\n    });\n  };\n\n  addToGarageClick = (event) => {\n    this.props.dispatch({\n      type: 'POST_VEHICLES',\n      payload: this.state.newVehicle,\n    });\n    this.props.history.push('/garage');\n  };\n  backToGarageClick = (event) => {\n    this.props.history.push('/garage');\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>\n          <h2>{this.state.heading}</h2>\n        </div>\n        <div>\n          <TextField\n            className={this.props.classes.vehicleInput}\n            label=\"Vehicle Name\"\n            onChange={this.handleVehicleInputChange('name')}\n          />\n          <TextField\n            className={this.props.classes.vehicleInput}\n            label=\"Image URL\"\n            onChange={this.handleVehicleInputChange('image')}\n          />\n        </div>\n        <div>\n          <h4>Oil</h4>\n        </div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            {/* <Grid container justify=\"space-around\"> */}\n            <KeyboardDatePicker\n              className={this.props.classes.vehicleInput}\n              disableToolbar\n              autoOk\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"date-picker-oil\"\n              label=\"Date of Change\"\n              value={this.state.newVehicle.oil_date}\n              onChange={this.handleOilDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            {/* </Grid> */}\n          </MuiPickersUtilsProvider>\n          <TextField\n            className={this.props.classes.vehicleInput}\n            helperText=\"Miles driven since last change\"\n            onChange={this.handleVehicleInputChange('oil_miles_drove')}\n          />\n          <TextField\n            className={this.props.classes.vehicleInput}\n            helperText=\"Miles allowed before change\"\n            onChange={this.handleVehicleInputChange('oil_miles_allowed')}\n          />\n        </div>\n        <div>\n          <h4>Tires</h4>\n        </div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            {/* <Grid container justify=\"space-around\"> */}\n            <KeyboardDatePicker\n              className={this.props.classes.vehicleInput}\n              autoOk\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"date-picker-tires\"\n              label=\"Date of Change\"\n              value={this.state.newVehicle.tires_date}\n              onChange={this.handleTiresDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            {/* </Grid> */}\n          </MuiPickersUtilsProvider>\n          <TextField\n            className={this.props.classes.vehicleInput}\n            margin=\"normal\"\n            helperText=\"Miles driven since last change\"\n            onChange={this.handleVehicleInputChange('tires_miles_drove')}\n          />\n          <TextField\n            className={this.props.classes.vehicleInput}\n            margin=\"normal\"\n            helperText=\"Miles allowed before change\"\n            onChange={this.handleVehicleInputChange('tires_miles_allowed')}\n          />\n        </div>\n        <Button\n          className={this.props.classes.vehicleInput}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.backToGarageClick}\n        >\n          Back to Garage\n        </Button>\n        <Button\n          className={this.props.classes.vehicleInput}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.addToGarageClick}\n        >\n          Add to Garage\n        </Button>\n        {/* <button onClick={this.addToGarageClick}>Add to Garage</button> */}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styling)(connect(mapStoreToProps)(AddVehiclePage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport './VehicleDetailsPage.css';\nimport Button from '@material-ui/core/Button';\n\nconst { DateTime } = require('luxon');\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\n\nconst styling = (theme) =>\n  createStyles({\n    imgMedia: {\n      width: '100%',\n      backgroundSize: 'cover',\n      margin: '10px',\n    },\n    paper: {\n      textAlign: 'center',\n      // margin: '5px',\n    },\n    maintenance: {\n      display: 'inline',\n    },\n  });\n\nclass VehicleDetailsPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n    this.props.dispatch({\n      type: 'GET_TRIPS',\n      payload: this.props.match.params.id,\n    });\n    console.log(this.props.store.vehicleDetails);\n    console.log(this.props.store.vehicleDetails.oil);\n    console.log(this.props.store.trips);\n  }\n\n  vehicleDetailsEditClick = (event) => {\n    this.props.history.push(\n      `/vehicle/details/${this.props.store.vehicleDetails.id}/edit`\n    );\n  };\n\n  vehicleDetailsViewClick = (event) => {\n    this.props.history.push(\n      `/vehicle/maintenance/${this.props.store.vehicleDetails.id}`\n    );\n  };\n\n  vehicleDetailsAddTripClick = (event) => {\n    this.props.history.push(\n      `/vehicle/${this.props.store.vehicleDetails.id}/addtrip`\n    );\n  };\n\n  render() {\n    return (\n      <Grid container spacing={1} className={this.props.classes.paper}>\n        <Grid className={this.props.classes.paper} item xs={12}>\n          <h2>{this.props.store.vehicleDetails.name} Details</h2>\n        </Grid>\n        <Grid container item xs={12} alignItems=\"flex-start\">\n          <Grid item xs={4}>\n            <img\n              className={this.props.classes.imgMedia}\n              alt={this.props.store.vehicleDetails.name}\n              src={this.props.store.vehicleDetails.image}\n            />\n            <div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.vehicleDetailsEditClick}\n              >\n                Edit {this.props.store.vehicleDetails.name}\n              </Button>\n              {/* <button onClick={this.vehicleDetailsEditClick}>Edit</button> */}\n            </div>\n          </Grid>\n\n          <Grid\n            container\n            item\n            xs={8}\n            className={this.props.classes.paper}\n            alignItems=\"flex-end\"\n          >\n            <Grid item xs={12}>\n              <h2>Maintenance</h2>\n            </Grid>\n            <Grid item xs={4}>\n              <h4>Oil Status</h4>\n              {this.props.store.vehicleDetails.oil &&\n                this.props.store.vehicleDetails.oil.map((oilItem, index) => {\n                  if (oilItem.miles_left > oilItem.miles_allowed * 0.2) {\n                    return (\n                      <p key={index} style={{ color: 'green' }}>\n                        {oilItem.miles_left} miles left\n                      </p>\n                    );\n                  } else {\n                    return (\n                      <p key={index} style={{ color: 'red' }}>\n                        {oilItem.miles_left} miles left\n                      </p>\n                    );\n                  }\n                })}\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.vehicleDetailsViewClick}\n              >\n                Service {this.props.store.vehicleDetails.name}\n              </Button>\n              {/* <button onClick={this.vehicleDetailsViewClick}>View</button> */}\n            </Grid>\n            <Grid item xs={4}>\n              <h4>Tire Status</h4>\n              {this.props.store.vehicleDetails.tires &&\n                this.props.store.vehicleDetails.tires.map((tireItem, index) => {\n                  console.log(tireItem);\n                  if (tireItem.miles_left > tireItem.miles_allowed * 0.2) {\n                    return (\n                      <p key={index} style={{ color: 'green' }}>\n                        {tireItem.miles_left} miles left\n                      </p>\n                    );\n                  } else {\n                    return (\n                      <p key={index} style={{ color: 'red' }}>\n                        {tireItem.miles_left} miles left\n                      </p>\n                    );\n                  }\n                })}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12}>\n          <h2>Trips</h2>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.vehicleDetailsAddTripClick}\n          >\n            Add a Trip\n          </Button>\n          {/* <button onClick={this.vehicleDetailsAddTripClick}>Add a Trip</button> */}\n          <TableContainer\n            component={Paper}\n            style={{ margin: '10px', width: 'auto' }}\n            className={this.props.classes.paper}\n          >\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell style={{ color: '#22B1C2' }}>Date</TableCell>\n                  <TableCell style={{ color: '#22B1C2' }}>Name</TableCell>\n                  <TableCell style={{ color: '#22B1C2' }}>\n                    Starting Location\n                  </TableCell>\n                  <TableCell style={{ color: '#22B1C2' }}>\n                    Ending Location\n                  </TableCell>\n                  <TableCell style={{ color: '#22B1C2' }}>Distance</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.store.trips.map((tripItem, index) => {\n                  const tripDate = DateTime.fromISO(tripItem.date);\n                  const humanTripDate = tripDate.toLocaleString(\n                    DateTime.DATE_SHORT\n                  );\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {humanTripDate}\n                      </TableCell>\n                      <TableCell>{tripItem.name}</TableCell>\n                      <TableCell>{tripItem.start_point}</TableCell>\n                      <TableCell>{tripItem.end_point}</TableCell>\n                      <TableCell>{tripItem.total} miles</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styling)(\n  connect(mapStoreToProps)(VehicleDetailsPage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\n\nconst styling = (theme) =>\n  createStyles({\n    vehicleInput: {\n      width: '700px',\n      margin: '10px',\n    },\n  });\n\nclass VehicleDetailsEditPage extends Component {\n  state = {\n    editVehicle: {\n      name: '',\n      image: '',\n    },\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n    this.setState({\n      editVehicle: {\n        name: this.props.store.vehicleDetails.name,\n        image: this.props.store.vehicleDetails.image,\n        id: this.props.store.vehicleDetails.id,\n      },\n    });\n  }\n\n  handleChangeField = (event, propertyKey) => {\n    this.setState({\n      editVehicle: {\n        ...this.state.editVehicle,\n        [propertyKey]: event.target.value,\n      },\n    });\n  };\n\n  saveVehicleDetails = (event) => {\n    this.props.dispatch({\n      type: 'PUT_VEHICLE',\n      payload: this.state.editVehicle,\n    });\n    this.props.history.push(\n      `/vehicle/details/${this.props.store.vehicleDetails.id}`\n    );\n  };\n  cancelVehicleDetails = (event) => {\n    this.props.history.push(\n      `/vehicle/details/${this.props.store.vehicleDetails.id}`\n    );\n  };\n\n  deleteVehicle = (event) => {\n    Swal.fire({\n      title: `Are you sure you want to DELETE ${this.props.store.vehicleDetails.name}?`,\n      text:\n        \"This will DELETE all MAINTENANCE and TRIP history. You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n        this.props.dispatch({\n          type: 'DELETE_VEHICLE',\n          payload: this.props.store.vehicleDetails.id,\n        });\n        this.props.history.push('/garage');\n      }\n    });\n\n    // let answer = window.confirm(\n    //   `Are you sure you want to DELETE ${this.props.store.vehicleDetails.name}? This will DELETE all MAINTENANCE and TRIP history.`\n    // );\n    // if (answer) {\n    //   this.props.dispatch({\n    //     type: 'DELETE_VEHICLE',\n    //     payload: this.props.store.vehicleDetails.id,\n    //   });\n    //   this.props.history.push('/garage');\n    // }\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>\n          <h2>Edit {this.props.store.vehicleDetails.name}</h2>\n          {/* <pre>{JSON.stringify(this.state.editVehicle)}</pre> */}\n        </div>\n        <div>\n          <TextField\n            className={this.props.classes.vehicleInput}\n            label=\"Vehicle Name\"\n            variant=\"filled\"\n            value={this.state.editVehicle.name}\n            name=\"name\"\n            onChange={(event) => this.handleChangeField(event, 'name')}\n          />\n        </div>\n        <div>\n          <TextField\n            className={this.props.classes.vehicleInput}\n            label=\"Vehicle Image\"\n            variant=\"filled\"\n            value={this.state.editVehicle.image}\n            name=\"image\"\n            style={{ width: '700px' }}\n            onChange={(event) => this.handleChangeField(event, 'image')}\n          />\n        </div>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: '10px' }}\n            onClick={this.cancelVehicleDetails}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ margin: '10px' }}\n            onClick={this.saveVehicleDetails}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: '10px' }}\n            onClick={this.deleteVehicle}\n          >\n            Delete {this.props.store.vehicleDetails.name}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styling)(\n  connect(mapStoreToProps)(VehicleDetailsEditPage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport './VehicleMaintenancePage.css';\n\nconst { DateTime } = require('luxon');\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\n\nconst styling = (theme) =>\n  createStyles({\n    container: {\n      textAlign: 'center',\n    },\n  });\nclass VehicleMaintenancePage extends Component {\n  state = {\n    heading: 'Class Component',\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_MAINTENANCE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n    this.props.dispatch({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n    console.log(this.props.store.maintenance);\n    console.log(this.props.store.vehicleDetails);\n    console.log(this.props.store.vehicleDetails.oil);\n  }\n\n  changeOilClick = (event) => {\n    this.props.history.push(\n      `/vehicle/maintenance/${this.props.store.vehicleDetails.id}/changeOil`\n    );\n  };\n  changeTiresClick = (event) => {\n    this.props.history.push(\n      `/vehicle/maintenance/${this.props.store.vehicleDetails.id}/changeTires`\n    );\n  };\n\n  backToGarageClick = (event) => {\n    this.props.history.push(\n      `/vehicle/details/${this.props.store.vehicleDetails.id}`\n    );\n  };\n\n  render() {\n    return (\n      <Grid container className={this.props.classes.container}>\n        <Grid item xs={12}>\n          <h1>Maintenance for {this.props.store.vehicleDetails.name}</h1>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.backToGarageClick}\n          >\n            Back to {this.props.store.vehicleDetails.name}\n          </Button>\n        </Grid>\n\n        <Grid item xs={6}>\n          <h2>Current Oil</h2>\n          {this.props.store.vehicleDetails.oil &&\n            this.props.store.vehicleDetails.oil.map((oilItem, index) => {\n              const oilDate = DateTime.fromISO(oilItem.date);\n              const humanOilDate = oilDate.toLocaleString(DateTime.DATE_SHORT);\n              // console.log(oilDate);\n              // console.log(humanOilDate);\n              if (oilItem.miles_left > oilItem.miles_allowed * 0.2) {\n                return (\n                  <div key={index}>\n                    <p>Miles Driven: {oilItem.miles_drove}</p>\n                    <p>Date last changed: {humanOilDate}</p>\n                    <p>\n                      Miles left until next change:\n                      <span style={{ color: 'green' }}>\n                        {' '}\n                        {oilItem.miles_left}\n                      </span>\n                    </p>\n                    <p>\n                      Miles allowed: <strong>{oilItem.miles_allowed}</strong>\n                    </p>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={this.changeOilClick}\n                    >\n                      Change Oil\n                    </Button>\n                    {/* <button onClick={this.changeOilClick}>Change Oil</button> */}\n                  </div>\n                );\n              } else {\n                return (\n                  <div key={index}>\n                    <p>Miles Driven: {oilItem.miles_drove}</p>\n                    <p>Date last changed: {humanOilDate}</p>\n                    <p>\n                      Miles left until next change:\n                      <span style={{ color: 'red' }}>\n                        {' '}\n                        {oilItem.miles_left}\n                      </span>\n                    </p>\n                    <p>\n                      Miles allowed: <strong>{oilItem.miles_allowed}</strong>\n                    </p>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={this.changeOilClick}\n                    >\n                      Change Oil\n                    </Button>\n                    {/* <button onClick={this.changeOilClick}>Change Oil</button> */}\n                  </div>\n                );\n              }\n            })}\n        </Grid>\n\n        <Grid item xs={6}>\n          <h2>Current Tires</h2>\n          {this.props.store.vehicleDetails.tires &&\n            this.props.store.vehicleDetails.tires.map((tireItem, index) => {\n              const tireDate = DateTime.fromISO(tireItem.date);\n              const humanTireDate = tireDate.toLocaleString(\n                DateTime.DATE_SHORT\n              );\n              console.log(tireDate);\n              console.log(humanTireDate);\n              if (tireItem.miles_left > tireItem.miles_allowed * 0.2) {\n                return (\n                  <div key={index}>\n                    <p>Miles Driven: {tireItem.miles_drove}</p>\n                    <p>Date last changed: {humanTireDate}</p>\n                    <p>\n                      Miles left until next change:\n                      <span style={{ color: 'green' }}>\n                        {' '}\n                        {tireItem.miles_left}\n                      </span>\n                    </p>\n                    <p>\n                      Miles allowed: <strong>{tireItem.miles_allowed}</strong>\n                    </p>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={this.changeTiresClick}\n                    >\n                      Change Tires\n                    </Button>\n                    {/* <button onClick={this.changeTiresClick}>\n                      Change Tires\n                    </button> */}\n                  </div>\n                );\n              } else {\n                return (\n                  <div key={index}>\n                    <p>Miles Driven: {tireItem.miles_drove}</p>\n                    <p>Date last changed: {humanTireDate}</p>\n                    <p>\n                      Miles left until next change:\n                      <span style={{ color: 'red' }}>\n                        {' '}\n                        {tireItem.miles_left}\n                      </span>\n                    </p>\n                    <p>\n                      Miles allowed: <strong>{tireItem.miles_allowed}</strong>\n                    </p>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={this.changeTiresClick}\n                    >\n                      Change Tires\n                    </Button>\n                    {/* <button onClick={this.changeTiresClick}>\n                      Change Tires\n                    </button> */}\n                  </div>\n                );\n              }\n            })}\n        </Grid>\n\n        <Grid item xs={12}>\n          <h2>Maintenance History</h2>\n          <TableContainer\n            component={Paper}\n            style={{ margin: '10px', width: 'auto' }}\n          >\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell style={{ color: '#22B1C2' }}>Date</TableCell>\n                  <TableCell style={{ color: '#22B1C2' }}>Type</TableCell>\n                  <TableCell style={{ color: '#22B1C2' }}>\n                    Miles Driven\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.store.maintenance.oil &&\n                  this.props.store.maintenance.oil.map((oilItem, index) => {\n                    const oilDate = DateTime.fromISO(oilItem.date);\n                    const humanOilDate = oilDate.toLocaleString(\n                      DateTime.DATE_SHORT\n                    );\n\n                    return (\n                      <TableRow key={index}>\n                        <TableCell>{humanOilDate}</TableCell>\n                        <TableCell>Oil</TableCell>\n                        <TableCell>{oilItem.miles_drove}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {this.props.store.maintenance.tires &&\n                  this.props.store.maintenance.tires.map((tireItem, index) => {\n                    const tireDate = DateTime.fromISO(tireItem.date);\n                    const humanTireDate = tireDate.toLocaleString(\n                      DateTime.DATE_SHORT\n                    );\n\n                    return (\n                      <TableRow key={index}>\n                        <TableCell>{humanTireDate}</TableCell>\n                        <TableCell>Tires</TableCell>\n                        <TableCell>{tireItem.miles_drove}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styling)(\n  connect(mapStoreToProps)(VehicleMaintenancePage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\n\nconst styling = (theme) =>\n  createStyles({\n    tripInput: {\n      margin: '10px',\n      verticalAlign: 'baseline',\n    },\n  });\n\nclass AddTripPage extends Component {\n  state = {\n    heading: 'Add a Trip',\n    startDisabled: false,\n    endDisabled: false,\n    addTrip: {\n      name: '',\n      start_point: '',\n      end_point: '',\n      date: new Date(),\n      roundtrip: '',\n      total: '',\n      vehicle_id: this.props.store.vehicleDetails.id,\n    },\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    if ('geolocation' in navigator) {\n      console.log('it will work');\n    } else {\n      console.log('geolocation is not available on this browser');\n    }\n    this.props.dispatch({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  handleTripInputChange = (input) => (event) => {\n    this.setState({\n      addTrip: {\n        ...this.state.addTrip,\n        [input]: event.target.value,\n        roundtrip: event.target.checked,\n      },\n    });\n  };\n\n  handleTripDateChange = (event, date) => {\n    this.setState({\n      addTrip: {\n        ...this.state.addTrip,\n        date: date,\n      },\n    });\n  };\n\n  getStartingLocation = (event) => {\n    navigator.geolocation.getCurrentPosition(this.startSuccess, this.error);\n    this.setState({\n      startDisabled: !this.state.startDisabled,\n    });\n  };\n  startSuccess = (pos) => {\n    let cords = pos.coords;\n\n    console.log('Your current position is:');\n    console.log(`Latitude : ${cords.latitude}`);\n    console.log(`Longitude: ${cords.longitude}`);\n    this.setState({\n      addTrip: {\n        ...this.state.addTrip,\n        start_point: [cords.latitude, cords.longitude],\n      },\n    });\n  };\n\n  getEndingLocation = (event) => {\n    navigator.geolocation.getCurrentPosition(this.endingSuccess, this.error);\n    this.setState({\n      endDisabled: !this.state.endDisabled,\n    });\n  };\n  endingSuccess = (pos) => {\n    let cords = pos.coords;\n\n    console.log('Your current position is:');\n    console.log(`Latitude : ${cords.latitude}`);\n    console.log(`Longitude: ${cords.longitude}`);\n    this.setState({\n      addTrip: {\n        ...this.state.addTrip,\n        end_point: [cords.latitude, cords.longitude],\n      },\n    });\n  };\n\n  error = (err) => {\n    console.log(err);\n  };\n\n  cancelTrip = (event) => {\n    this.props.history.push(\n      `/vehicle/details/${this.props.store.vehicleDetails.id}`\n    );\n  };\n\n  submitTrip = (event) => {\n    let origin1 = this.state.addTrip.start_point;\n    if (this.state.startDisabled) {\n      origin1 = new window.google.maps.LatLng(\n        ...this.state.addTrip.start_point\n      );\n    }\n    let destination1 = this.state.addTrip.end_point;\n    if (this.state.endDisabled) {\n      destination1 = new window.google.maps.LatLng(\n        ...this.state.addTrip.end_point\n      );\n    }\n    const distanceService = new window.google.maps.DistanceMatrixService();\n    let service = distanceService;\n    service.getDistanceMatrix(\n      {\n        origins: [origin1],\n        destinations: [destination1],\n        unitSystem: window.google.maps.UnitSystem.IMPERIAL,\n        travelMode: 'DRIVING',\n      },\n      (response, status) => {\n        console.log(response);\n        console.log(status);\n        if (status !== 'OK') {\n          alert(`Error was: ${status}`);\n        } else {\n          let originList = response.originAddresses[0];\n          let destinationList = response.destinationAddresses[0];\n          let distance = response.rows[0].elements[0].distance;\n          // let distance_value = distance.value;\n          let distance_text = distance.text;\n          let miles = parseInt(\n            distance_text.substring(0, distance_text.length - 3)\n          );\n          console.log(miles);\n          console.log(this.state.addTrip.roundtrip);\n          if (this.state.addTrip.roundtrip) {\n            console.log(miles);\n            miles *= 2;\n            console.log('before', miles);\n          }\n          this.setState({\n            addTrip: {\n              ...this.state.addTrip,\n              start_point: originList,\n              end_point: destinationList,\n              total: miles,\n            },\n          });\n          this.props.dispatch({\n            type: 'POST_TRIPS',\n            payload: { ...this.state.addTrip, id: this.props.match.params.id },\n          });\n          // this.props.dispatch({\n          //   type: 'UPDATE_TRIP_MAINTENANCE',\n          //   payload: this.state.addTrip,\n          // });\n          this.props.history.push(\n            `/vehicle/details/${this.props.store.vehicleDetails.id}`\n          );\n\n          // for (let i = 0; i < originList.length; i++) {\n          //   let results = response.rows[i].elements;\n          //   for (let j = 0; j < results.length; j++) {\n          //     let element = results[j];\n          //     let distance = parseInt(element.distance.text);\n          //     let from = originList[i];\n          //     let to = destinationList[j];\n          //     console.log(\n          //       `Starting Location: ${from} Ending Location: ${to} Distance: ${distance} miles`\n          //     );\n          //     if (this.state.addTrip.roundtrip) {\n          //       distance *= 2;\n          //       console.log(distance);\n          //     }\n          //     console.log(this);\n          // this.setState({\n          //   addTrip: {\n          //     ...this.state.addTrip,\n          //     start_point: from,\n          //     end_point: to,\n          //     total: distance,\n          //   },\n          // });\n          //   }\n          // }\n        }\n        console.log(this.state);\n        // this.props.dispatch({\n        //   type: 'POST_TRIPS',\n        //   payload: this.state.addTrip,\n        // });\n        // this.props.history.push(\n        //   `/vehicle/details/${this.props.store.vehicleDetails.id}`\n        // );\n      }\n    );\n\n    console.log(this.state);\n  };\n  // send data to db and sub miles from tires and oil\n  render() {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>\n          <h2>{this.state.heading}</h2>\n          {/* <pre>\n            {JSON.stringify(\n              `${this.state.startDisabled} ${this.state.endDisabled}`\n            )}\n          </pre>\n          <pre>{JSON.stringify(this.state.addTrip)}</pre> */}\n        </div>\n        <div>\n          <TextField\n            className={this.props.classes.tripInput}\n            label=\"Trip Name\"\n            variant=\"outlined\"\n            value={this.state.addTrip.name}\n            onChange={this.handleTripInputChange('name')}\n          />\n        </div>\n        <div>\n          <TextField\n            className={this.props.classes.tripInput}\n            label=\"Starting Location\"\n            variant=\"outlined\"\n            value={this.state.addTrip.start_point}\n            onChange={this.handleTripInputChange('start_point')}\n            disabled={this.state.startDisabled ? true : false}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={this.getStartingLocation}\n          >\n            Get current Location\n          </Button>\n        </div>\n        <div>\n          <TextField\n            className={this.props.classes.tripInput}\n            label=\"Ending Location\"\n            variant=\"outlined\"\n            value={this.state.addTrip.end_point}\n            onChange={this.handleTripInputChange('end_point')}\n            disabled={this.state.endDisabled ? true : false}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={this.getEndingLocation}\n          >\n            Get current Location\n          </Button>\n        </div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              className={this.props.classes.tripInput}\n              disableToolbar\n              autoOk\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              label=\"Date of trip:\"\n              value={this.state.addTrip.date}\n              onChange={this.handleTripDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n        <div>\n          <FormControlLabel\n            className={this.props.classes.tripInput}\n            control={<Checkbox name=\"roundTrip\" color=\"primary\" />}\n            label=\"Roundtrip?\"\n            onChange={this.handleTripInputChange('roundtrip')}\n          />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.cancelTrip}\n          className={this.props.classes.tripInput}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.submitTrip}\n          className={this.props.classes.tripInput}\n        >\n          Add Trip\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styling)(connect(mapStoreToProps)(AddTripPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\n\nconst styling = (theme) =>\n  createStyles({\n    oilInput: {\n      margin: '10px',\n      verticalAlign: 'baseline',\n    },\n  });\n\nclass ChangeOilPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  state = {\n    heading: 'Change Oil',\n    oilChange: {\n      active: true,\n      date: new Date(),\n      miles_drove: '',\n      miles_allowed: '',\n      vehicle_id: this.props.store.vehicleDetails.id,\n    },\n    oldOil: {\n      active: false,\n      vehicle_id: this.props.store.vehicleDetails.id,\n    },\n  };\n\n  handleVehicleInputChange = (input) => (event) => {\n    this.setState({\n      oilChange: {\n        ...this.state.oilChange,\n        [input]: event.target.value,\n      },\n    });\n  };\n\n  handleOilDateChange = (event, date) => {\n    this.setState({\n      oilChange: {\n        ...this.state.oilChange,\n        date: date,\n      },\n    });\n  };\n\n  changeOilClick = (event) => {\n    this.props.dispatch({\n      type: 'UPDATE_OIL',\n      payload: this.state.oldOil,\n    });\n    this.props.dispatch({\n      type: 'POST_OIL',\n      payload: this.state.oilChange,\n    });\n    this.props.history.push(\n      `/vehicle/details/${this.props.store.vehicleDetails.id}`\n    );\n  };\n  cancelOilClick = (event) => {\n    this.props.history.push(\n      `/vehicle/maintenance/${this.props.store.vehicleDetails.id}`\n    );\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>\n          <h2>{this.state.heading}</h2>\n        </div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            {/* <Grid container justify=\"space-around\"> */}\n            <KeyboardDatePicker\n              className={this.props.classes.oilInput}\n              disableToolbar\n              autoOk\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              label=\"Date of Change\"\n              value={this.state.oilChange.date}\n              onChange={this.handleOilDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            {/* </Grid> */}\n          </MuiPickersUtilsProvider>\n          <TextField\n            className={this.props.classes.oilInput}\n            margin=\"normal\"\n            helperText=\"Miles driven since last change\"\n            onChange={this.handleVehicleInputChange('miles_drove')}\n          />\n          <TextField\n            className={this.props.classes.oilInput}\n            margin=\"normal\"\n            helperText=\"Miles allowed before change\"\n            onChange={this.handleVehicleInputChange('miles_allowed')}\n          />\n        </div>\n        <Button\n          className={this.props.classes.oilInput}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.cancelOilClick}\n        >\n          Cancel\n        </Button>\n        <Button\n          className={this.props.classes.oilInput}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.changeOilClick}\n        >\n          Change Oil\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styling)(connect(mapStoreToProps)(ChangeOilPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n// Basic class component structure for React with default state\n// value setup. When making a new component be sure to replace\n// the component name TemplateClass with the name for the new\n// component.\n\nconst styling = (theme) =>\n  createStyles({\n    tireInput: {\n      margin: '10px',\n      verticalAlign: 'baseline',\n    },\n  });\n\nclass ChangeTiresPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VEHICLE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  state = {\n    heading: 'Change Tires',\n    tireChange: {\n      active: true,\n      date: new Date(),\n      miles_drove: '',\n      miles_allowed: '',\n      vehicle_id: this.props.store.vehicleDetails.id,\n    },\n    oldTires: {\n      active: false,\n      vehicle_id: this.props.store.vehicleDetails.id,\n    },\n  };\n\n  handleVehicleInputChange = (input) => (event) => {\n    this.setState({\n      tireChange: {\n        ...this.state.tireChange,\n        [input]: event.target.value,\n      },\n    });\n  };\n\n  handleTireDateChange = (event, date) => {\n    this.setState({\n      tireChange: {\n        ...this.state.tireChange,\n        date: date,\n      },\n    });\n  };\n\n  changeTireClick = (event) => {\n    this.props.dispatch({\n      type: 'UPDATE_TIRES',\n      payload: this.state.oldTires,\n    });\n    this.props.dispatch({\n      type: 'POST_TIRES',\n      payload: this.state.tireChange,\n    });\n    this.props.history.push(\n      `/vehicle/details/${this.props.store.vehicleDetails.id}`\n    );\n  };\n\n  cancelTireClick = (event) => {\n    this.props.history.push(\n      `/vehicle/maintenance/${this.props.store.vehicleDetails.id}`\n    );\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>\n          <h2>{this.state.heading}</h2>\n        </div>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            {/* <Grid container justify=\"space-around\"> */}\n            <KeyboardDatePicker\n              className={this.props.classes.tireInput}\n              disableToolbar\n              autoOk\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              label=\"Date of Change\"\n              value={this.state.tireChange.date}\n              onChange={this.handleTireDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            {/* </Grid> */}\n          </MuiPickersUtilsProvider>\n          <TextField\n            className={this.props.classes.tireInput}\n            margin=\"normal\"\n            helperText=\"Miles driven since last change\"\n            onChange={this.handleVehicleInputChange('miles_drove')}\n          />\n          <TextField\n            className={this.props.classes.tireInput}\n            margin=\"normal\"\n            helperText=\"Miles allowed before change\"\n            onChange={this.handleVehicleInputChange('miles_allowed')}\n          />\n        </div>\n        <Button\n          className={this.props.classes.tireInput}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.cancelTireClick}\n        >\n          Cancel\n        </Button>\n        <Button\n          className={this.props.classes.tireInput}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.changeTireClick}\n        >\n          Change Tires\n        </Button>\n        {/* <button onClick={this.changeTireClick}>Change Tires</button> */}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styling)(connect(mapStoreToProps)(ChangeTiresPage));\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport InfoPage from '../InfoPage/InfoPage';\nimport LandingPage from '../LandingPage/LandingPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport './App.css';\nimport MyGaragePage from '../MyGaragePage/MyGaragePage';\nimport AddVehiclePage from '../AddVehiclePage/AddVehiclePage';\nimport VehicleDetailsPage from '../VehicleDetailsPage/VehicleDetailsPage';\nimport VehicleDetailsEditPage from '../VehicleDetailsEditPage/VehicleDetailsEditPage';\nimport VehicleMaintenancePage from '../VehicleMaintenancePage/VehicleMaintenancePage';\nimport AddTripPage from '../AddTripPage/AddTripPage';\nimport ChangeOilPage from '../ChangeOilPage/ChangeOilPage';\nimport ChangeTiresPage from '../ChangeTiresPage/ChangeTiresPage';\n\nconst customTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#E7363F',\n    },\n    secondary: {\n      main: '#22B1C2',\n    },\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        color: '#E7363F',\n      },\n    },\n    MuiFormHelperText: {\n      root: {\n        color: '#22B1C2',\n      },\n    },\n    MuiFormControlLabel: {\n      root: {\n        color: '#22B1C2',\n      },\n    },\n    MuiPaper: {\n      root: {\n        backgroundColor: '#060606c2',\n      },\n    },\n  },\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={customTheme}>\n        <Router>\n          <div>\n            <Nav />\n            <Switch>\n              {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n              <Redirect exact from=\"/\" to=\"/garage\" />\n\n              {/* Visiting localhost:3000/about will show the about page. */}\n              <Route\n                // shows AboutPage at all times (logged in or not)\n                exact\n                path=\"/about\"\n                component={AboutPage}\n              />\n\n              {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/user will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the LoginPage (component).\n            Even though it seems like they are different pages, the user is always on localhost:3000/user */}\n              <ProtectedRoute\n                // logged in shows UserPage else shows LoginPage\n                exact\n                path=\"/user\"\n                component={UserPage}\n              />\n\n              <ProtectedRoute\n                // logged in shows InfoPage else shows LoginPage\n                exact\n                path=\"/info\"\n                component={InfoPage}\n              />\n\n              {/* When a value is supplied for the authRedirect prop the user will\n            be redirected to the path supplied when logged in, otherwise they will\n            be taken to the component and path supplied. */}\n              <ProtectedRoute\n                // with authRedirect:\n                // - if logged in, redirects to \"/user\"\n                // - else shows LoginPage at /login\n                exact\n                path=\"/login\"\n                component={LoginPage}\n                authRedirect=\"/garage\"\n              />\n              <ProtectedRoute\n                // with authRedirect:\n                // - if logged in, redirects to \"/user\"\n                // - else shows RegisterPage at \"/registration\"\n                exact\n                path=\"/registration\"\n                component={RegisterPage}\n                authRedirect=\"/garage\"\n              />\n              <ProtectedRoute\n                // with authRedirect:\n                // - if logged in, redirects to \"/user\"\n                // - else shows LandingPage at \"/home\"\n                exact\n                path=\"/home\"\n                component={LandingPage}\n                authRedirect=\"/garage\"\n              />\n\n              <ProtectedRoute exact path=\"/garage\" component={MyGaragePage} />\n              <ProtectedRoute\n                exact\n                path=\"/addvehicle\"\n                component={AddVehiclePage}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/vehicle/details/:id\"\n                component={VehicleDetailsPage}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/vehicle/details/:id/edit\"\n                component={VehicleDetailsEditPage}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/vehicle/maintenance/:id\"\n                component={VehicleMaintenancePage}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/vehicle/:id/addtrip\"\n                component={AddTripPage}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/vehicle/maintenance/:id/changeOil\"\n                component={ChangeOilPage}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/vehicle/maintenance/:id/changeTires\"\n                component={ChangeTiresPage}\n              />\n\n              {/* If none of the other routes matched, we will show a 404. */}\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}